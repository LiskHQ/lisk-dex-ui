import { Box, Typography } from '@mui/material';
import { faChevronRight } from '@fortawesome/free-solid-svg-icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { FeaturedPools, InfoChart, PoolsTable, TokensTable, TransactionsTable } from 'components';
import { OverviewComponentStyle } from './index.style';
import { useMemo, useState } from 'react';
import { createMockChartInfo } from '__mock__';
import { NextRouter } from 'next/dist/client/router';

export interface IOverviewComponentProps {
  router: NextRouter,
}

export const OverviewComponent: React.FC<IOverviewComponentProps> = (props) => {
  const { router } = props;

  const chartData = useMemo(() => {
    return createMockChartInfo();
  }, []);

  const onSelectPool = (id: string) => {
    router.push(`?poolId=${id}`);
  };

  const onSelectToken = (id: string) => {
    router.push(`?tokenId=${id}`);
  };

  // transactions table control
  const [transactionsPage, setTransactionsPage] = useState<number>(1);
  const [transactionsLimit, setTransactionsLimit] = useState<number>(10);
  const transactionsTotalPages = useMemo(() => {
    return Math.ceil(10 / transactionsLimit);
  }, [transactionsLimit]);

  return (
    <OverviewComponentStyle>
      <Box className="info-header">
        <Typography variant="subtitle1">Overview</Typography>
        <Typography variant="body1">View and track liquidity, volume and fees generated by the Lisk decentralized exchange.</Typography>
      </Box>

      <InfoChart chartData={chartData} />

      <Box className="table-title">
        <Typography variant="subtitle1">Featured Pools</Typography>
      </Box>
      <FeaturedPools onSelectPool={onSelectPool} />

      <Box className="table-title">
        <Typography variant="subtitle1">Top Tokens</Typography>
        <Box className="view-all">
          <Typography variant="body2">View all tokens</Typography>
          <FontAwesomeIcon icon={faChevronRight} />
        </Box>
      </Box>
      <TokensTable onSelectToken={onSelectToken} />

      <Box className="table-title">
        <Typography variant="subtitle1">Top Pools</Typography>
        <Box className="view-all">
          <Typography variant="body2">View all tokens</Typography>
          <FontAwesomeIcon icon={faChevronRight} />
        </Box>
      </Box>
      <PoolsTable onSelectPool={onSelectPool} />

      <Box className="table-title">
        <Typography variant="subtitle1">Transactions</Typography>
      </Box>
      <TransactionsTable
        page={transactionsPage}
        limit={transactionsLimit}
        totalPages={transactionsTotalPages}
        onChangeRowCount={value => setTransactionsLimit(value)}
        onNextPage={() => setTransactionsPage(Math.min(transactionsPage + 1, transactionsTotalPages))}
        onPreviousPage={() => setTransactionsPage(Math.max(transactionsPage - 1, 1))}
      />
    </OverviewComponentStyle>
  );
};